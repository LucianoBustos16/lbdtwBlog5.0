---
const response = await fetch("https://api.promiedos.com.ar/league/tables_and_fixtures/hc");
const data = await response.json();

const group = data?.tables_groups?.[0]; // Ej: Apertura
const zonas = group?.tables || [];

const headerTdClasses = "px-2 py-3 text-center"
const bodyTdClasses = "px-2 py-3"
---

<section>
  <h2 class="text-textDark dark:text-gray-400 font-bold text-xl mb-8">Tabla de posiciones - {group?.name}</h2>

  {zonas.map((zona) => {
    const tableData = zona?.table;
    const columns = tableData?.columns || [];
    const rows = tableData?.rows || [];

    return (
      <>
        <h3 class="text-textDark dark:text-gray-400">{zona.name}</h3>

        <div class="relative overflow-x-auto shadow-md rounded-lg mb-6">
            <table class="w-full text-sm text-left rtl:text-right text-textDark dark:text-gray-400">
              <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
                <th scope="col" class={`${headerTdClasses}`}>
                    #
                </th>
                <th scope="col" class={`px-2 py-3`}>
                    Equipo
                </th>
                <th scope="col" class={`${headerTdClasses}`}>
                    J
                </th>
                <th scope="col" class={`${headerTdClasses}`}>
                    G
                </th>
                <th scope="col" class={`${headerTdClasses}`}>
                    E
                </th>
                <th scope="col" class={`${headerTdClasses}`}>
                    P
                </th>
                <th scope="col" class={`${headerTdClasses}`}>
                    Goles
                </th>
                <th scope="col" class={`${headerTdClasses}`}>
                    Pts.
                </th>
            </tr>
        </thead>
          <tbody>
            {rows.map((row) => (
              <tr>

                <td class={`${bodyTdClasses} text-center font-bold`}>{row.num}</td>

                <td class={`${bodyTdClasses} font-bold flex flex-center items-center gap-2`}>                 
                  <img src={`/images/teams/${row.entity?.object?.url_name}.svg`} alt={`Escudo de ${row.entity?.object?.name}`} width="24" height="24">
                  {row.entity?.object?.short_name}
                  </td>

                <td class={`${bodyTdClasses} text-center`}> {row.values.find(item => item.key === 'GamePlayed')?.value}</td>
                <td class={`${bodyTdClasses} text-center`}> {row.values.find(item => item.key === 'GamesWon')?.value}</td>
                <td class={`${bodyTdClasses} text-center`}> {row.values.find(item => item.key === 'GamesEven')?.value}</td>
                <td class={`${bodyTdClasses} text-center`}> {row.values.find(item => item.key === 'GamesLost')?.value}</td>
                <td class={`${bodyTdClasses} text-center`}> {row.values.find(item => item.key === 'Goals')?.value}</td>
                <td class={`${bodyTdClasses} font-bold text-center`}> {row.values.find(item => item.key === 'Points')?.value}</td>

                
              </tr>
            ))}
          </tbody>
        </table>
    </div>
      </>
    );
  })}
</section>



{/* {columns.map(col => {
                  const valueObj = row.values.find(v => v.key === col.key);
                  let value = valueObj?.value;

                  if (Array.isArray(value)) {
                    // Mostrar íconos de tendencia (últimos partidos)
                    value = value.map(result => {
                      if (result === 1) return "✅"; // victoria
                      if (result === 0) return "❌"; // derrota
                      if (result === 2) return "➖"; // empate
                      return "•";
                    }).join(" ");
                  }

                  const isPointsColumn = col.key === "Points";

                  return  <td class={isPointsColumn ? "font-bold" : ""}>
                    {value}</td>;
                })} */}